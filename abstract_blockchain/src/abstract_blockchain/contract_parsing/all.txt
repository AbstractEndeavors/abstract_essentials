[{'type': 'uint256', 'name': 'totalPayable;'},
 {'type': 'uint256', 'name': 'protos;'},
 {'type': 'uint256', 'name': 'feesOwed;'},
 {'type': 'uint256', 'name': 'futureFees;'},
 {'type': 'uint256', 'name': 'feesPaid;'},
 {'type': 'uint256', 'name': 'collapsed;'},
 {'type': 'uint256', 'name': 'feeFroze;'},
 {'type': 'uint256', 'name': 'insolvent;'},
 {'type': 'uint256', 'name': 'imploded;'},
 {'type': 'string', 'name': 'name;'},
 {'type': 'uint256', 'name': 'protoCreationDate;'},
 {'type': 'uint256', 'name': 'protoElapsed;'},
 {'type': 'uint256', 'name': 'protoCollapseDate;'},
 {'type': 'uint256', 'name': 'protoNextDue;'},
 {'type': 'uint256', 'name': 'protoDueElapsed;'},
 {'type': 'uint256', 'name': 'protoFeesPaid;'},
 {'type': 'uint256', 'name': 'protoFutureFees;'},
 {'type': 'uint256', 'name': 'protoIncreasedDecay;'},
 {'type': 'uint256', 'name': 'protoFeeFroze;'},
 {'type': 'uint256', 'name': 'protoTotalPayable;'},
 {'type': 'bool', 'name': 'owed;'},
 {'type': 'boolInsolvent;'},
 {'type': 'boolImploded;'},
 {'type': 'boolCollapsed;'},
 {'type': 'address[]', 'visibility': 'public', 'name': 'protoOwners;'},
 {'type': 'address[]', 'visibility': 'public', 'name': 'Managers;'},
 {'type': 'address', 'modifiers': 'payable', 'name': 'teamPool;'},
 {'type': 'address', 'visibility': 'public', 'name': 'NeFiToken;'},
 {'type': 'address', 'visibility': 'public', 'name': 'NeFiPair;'},
 {'type': 'uint256', 'name': 'teamPerc;'},
 {'type': 'address', 'modifiers': 'payable', 'name': 'rewardsPool;'},
 {'type': 'uint256', 'name': 'rewardsPerc;'},
 {'type': 'uint256', 'name': 'treasuryPerc;'},
 {'type': 'uint256', 'visibility': 'public', 'False': ['gracePeriod', '=', '5'], 'name': 'days;'},
 {'type': 'uint256', 'visibility': 'public', 'False': ['protoLife', '=', '500'], 'name': 'days;'},
 {'type': 'uint256', 'visibility': 'public', 'False': ['maxFeePayment', '=', '365'], 'name': 'days;'},
 {'type': 'uint256', 'visibility': 'public', 'False': ['maxPayPeriods', '='], 'name': '12;'},
 {'type': 'uint256', 'visibility': 'public', 'False': ['feePeriod', '=', '31'], 'name': 'days;'},
 {'type': 'bool', 'False': ['boostem', '='], 'name': 'false;'},
 {'type': 'address', 'visibility': 'public', 'name': 'feeToken;'},
 {'type': 'address', 'modifiers': 'payable', 'name': 'treasury;'},
 {'type': 'bool', 'visibility': 'public', 'False': ['feeFroze', '='], 'name': 'true;'},
 {'type': 'uint256', 'False': ['Zero'], 'name': '=0;'},
 {'type': 'uint256', 'False': ['One', '='], 'name': '1;'},
 {'type': 'address', 'name': 'Guard;'},
 {'False': ['protoManager'], 'visibility': 'public', 'name': 'protoMGR;'},
 {'abstract contract': 'boostManager', 'visibility': 'public', 'name': 'boostMGR;'},
 {'abstract contract': 'overseer', 'name': 'over;'},
 {'interface': 'IERC20', 'name': 'feeTok;'},
 {'interface': 'IERC20', 'name': 'NeFi;'},
 {'abstract contract': 'over', 'False': ['='], 'name': 'overseer(_addresses[1]);'},
 {'interface': 'feeTok', 'False': ['='], 'name': 'IERC20(_addresses[2]);'},
 {'False': ['teamPool', '='], 'name': '0x05BFC3F8E9124eCBc762f841eC540DB3987AFE82;'},
 {'False': ['rewardsPool', '='], 'name': '0x05BFC3F8E9124eCBc762f841eC540DB3987AFE82;'},
 {'False': ['treasury', '='], 'modifiers': 'payable(owner());'},
 {'type': 'uint256', 'False': ['_amount', '='], 'precedence': 'msg.value;'},
 {'modifiers': 'payable(teamPool).transfer(NeFiLib.sendPercentage(_amount,teamPerc));'},
 {'modifiers': 'payable(rewardsPool).transfer(NeFiLib.sendPercentage(_amount,rewardsPerc));'},
 {'modifiers': 'payable(treasury).transfer(NeFiLib.sendPercentage(_amount,treasuryPerc));'},
 {'type': 'uint256', 'precedence': 'balanceRemainder', 'False': ['='], 'name': '_amount.sub(NeFiLib.sendPercentage(_amount,treasuryPerc)).sub(NeFiLib.sendPercentage(_amount,rewardsPerc)).sub(NeFiLib.sendPercentage(_amount,teamPerc));'},
 {'name': 'if(balanceRemainder>0){'},
 {'modifiers': 'payable(treasury).transfer(balanceRemainder);'},
 {'name': 'updateFeesPaid(_account,_intervals,_x);'},
 {'interface': 'IERC20', 'False': ['Tok', '='], 'name': 'IERC20(token);'},
 {'False': ['Tok.transferFrom(_account,', 'teamPool,'], 'name': 'NeFiLib.sendPercentage(_amount,teamPerc));'},
 {'False': ['Tok.transferFrom(_account,', 'rewardsPool,'], 'name': 'NeFiLib.sendPercentage(_amount,rewardsPerc));'},
 {'False': ['Tok.transferFrom(_account,', 'treasury,'], 'name': 'NeFiLib.sendPercentage(_amount,treasuryPerc));'},
 {'type': 'uint256', 'False': ['leftover', '='], 'name': '_amount.sub(NeFiLib.sendPercentage(_amount,teamPerc)).sub(NeFiLib.sendPercentage(_amount,rewardsPerc)).sub(NeFiLib.sendPercentage(_amount,treasuryPerc));'},
 {'False': ['Tok.transferFrom(_account,', 'treasury,'], 'name': 'leftover);'},
 {},
 {},
 {'name': 'updateFeesPaid(_account,_intervals,_x);'},
 {'name': 'INTreconcileAccountFees(protoOwners[i]);'},
 {'name': 'INTreconcileAccountFees(_account);'},
 {'name': 'INTreconcileFees(_account,i);'},
 {'name': 'INTqueryBoolOwed(_account);'},
 {'name': 'INTupdateFutureFees(_account);'},
 {'name': 'INTupdateTotalPayable(_account);'},
 {'name': 'INTreconcileFees(_account,_x);'},
 {'name': 'INTupdateProtoIncreasedDecay(_account,_x);'},
 {'name': 'INTqueryProtoCollapseDate(_account,_x);'},
 {'name': 'INTupdateProtoFeeFroze(_account,_x,block.timestamp);'},
 {'name': 'INTqueryProtoElapsed(_account,_x);'},
 {'name': 'INTqueryProtoDueElapsed(_account,_x);'},
 {'name': 'INTqueryBoolOwed(_account);'},
 {'name': 'INTqueryBoolInsolvent(_account,_x);'},
 {'name': 'INTqueryProtoFutureFees(_account,_x);'},
 {'name': 'INTqueryProtoTotalPayable(_account,_x);'},
 {'False': ['TOTALFEES', 'storage', '_totalfees', '='], 'name': 'totalfees[_account];'},
 {'False': ['return'], 'name': '(_totalfees.totalPayable,_totalfees.protos,_totalfees.feesOwed,_totalfees.futureFees,_totalfees.feesPaid,_totalfees.collapsed,_totalfees.feeFroze,_totalfees.insolvent,_totalfees.imploded);'},
 {'type': 'uint256', 'name': 'now;'},
 {'type': 'uint256', 'name': 'low;'},
 {'type': 'uint256', 'False': ['lowest', '='], 'name': 'INTgetProtoDueElapsed(_account,0);'},
 {'name': 'INTreconcileAccountFees(_account);'},
 {'False': ['now', '='], 'name': 'INTgetProtoDueElapsed(_account,j);'},
 {'False': ['if(now', '<', 'lowest', '&&', '!=', 'true', '&&', '!='], 'type': 'bools[_account][j].boolImploded', 'name': 'true){'},
 {'False': ['low', '='], 'name': 'j;'},
 {'False': ['lowest', '='], 'name': 'INTgetProtoDueElapsed(_account,j);'},
 {'False': ['return'], 'name': 'low;'},
 {'False': ['return'], 'name': 'nameExists(_account,_name);'},
 {'False': ['PROTOOWNERS[]', 'storage', 'protos', '='], 'name': 'protoowners[_account];'},
 {'False': ['PROTOOWNERS', 'storage', 'proto', '='], 'name': 'protos[i];'},
 {'False': ['if(keccak256(bytes(proto.name))', '=='], 'precedence': 'keccak256(bytes(_name))){'},
 {'False': ['return'], 'name': 'true;'},
 {'False': ['return'], 'name': 'false;'},
 {'False': ['protoowners[_account][findFromName(_account,_Oldname)].name', '='], 'name': '_newName;'},
 {'False': ['return'], 'name': 'findFromName(_account,_name);'},
 {'False': ['PROTOOWNERS[]', 'storage', 'protos', '='], 'name': 'protoowners[_account];'},
 {'False': ['PROTOOWNERS', 'storage', 'proto', '='], 'name': 'protos[i];'},
 {'False': ['if(keccak256(bytes(proto.name))', '=='], 'precedence': 'keccak256(bytes(_name))){'},
 {'False': ['return'], 'name': 'i;'},
 {'name': 'if(_bool==false){'},
 {'False': ['totalfees[_account].protos', '-='], 'name': '_protos;'},
 {'False': ['totalfees[address(this)].protos', '-='], 'name': '_protos;'},
 {'name': '}else{'},
 {'False': ['totalfees[_account].protos', '+='], 'name': '_protos;'},
 {'False': ['totalfees[address(this)].protos', '+='], 'name': '_protos;'},
 {'type': 'uint160', 'False': ['m', '='], 'name': '0;'},
 {'type': 'uint160', 'False': ['b', '='], 'name': '0;'},
 {},
 {'False': ['for', '(uint8', 'i', '=', '0;', 'i', '<', '20;', 'i++)'], 'name': '{'},
 {'False': ['m', '*='], 'name': '256;'},
 {'False': ['b', '='], 'type': 'uint160(_address[i]);'},
 {'False': ['m', '+='], 'name': '(b);'},
 {},
 {'False': ['return'], 'type': 'address(m);'},
 {'name': 'INTaddProto(bytesToAddress(add[i]),_name[i]);'},
 {'name': 'INTaddProto(_account,_name);'},
 {'type': 'uint256', 'False': ['_time', '='], 'precedence': 'block.timestamp;'},
 {},
 {'False': ['if(NeFiLib.addressInList(protoOwners,_account)', '=='], 'name': 'false){'},
 {'name': 'protoOwners.push(_account);'},
 {'type': 'uint256', 'False': ['_protoFeeFroze', '='], 'name': 'Zero;'},
 {'type': 'uint256', 'False': ['life', '='], 'precedence': 'block.timestamp.add(protoLife);'},
 {'False': ['PROTOOWNERS[]', 'storage', '_protoowners', '='], 'name': 'protoowners[_account];'},
 {'type': 'uint256', 'False': ['len', '='], 'name': '_protoowners.length.add(1);'},
 {'name': '_protoowners.push(PROTOOWNERS({'},
 {'name': 'name:_name,'},
 {'name': 'protoCreationDate:block.timestamp,'},
 {'name': 'protoElapsed:Zero,'},
 {'name': 'protoCollapseDate:life,'},
 {'name': 'protoNextDue:block.timestamp,'},
 {'name': 'protoDueElapsed:Zero,'},
 {'name': 'protoFeesPaid:Zero,'},
 {'name': 'protoFutureFees:Zero,'},
 {'name': 'protoIncreasedDecay:Zero,'},
 {'name': 'protoFeeFroze:Zero,'},
 {'name': 'protoTotalPayable:maxPayPeriods'},
 {'name': '}));'},
 {'False': ['BOOL[]', 'storage', '_bool', '='], 'type': 'bools[_account];'},
 {'name': '_bool.push(BOOL({boolInsolvent:false,boolImploded:false,boolCollapsed:false,owed:false}));'},
 {'name': 'INTupdateProtos(_account,true,One);'},
 {'name': 'updateFeesPaid(_account,1,len.sub(1));'},
 {'precedence': 'require(nameExists(_account,_name)==true,"the', 'False': ['proto', 'to', 'be', 'collapsed', 'could', 'not', 'be'], 'name': 'found");'},
 {'name': 'INTcollapse(_account,findFromName(_account,_name));'},
 {'False': ['PROTOOWNERS[]', 'storage', 'protos', '='], 'name': 'protoowners[_account];'},
 {'False': ['BOOL[]', 'storage', 'boo', '='], 'type': 'bools[_account];'},
 {'False': ['if(i', '!='], 'name': 'protos.length-1){'},
 {'False': ['PROTOOWNERS', 'storage', 'proto_bef', '='], 'name': 'protos[i];'},
 {'False': ['PROTOOWNERS', 'storage', 'proto_now', '='], 'name': 'protos[i+1];'},
 {'False': ['BOOL', 'storage', '='], 'type': 'bool_bef', 'name': 'boo[i];'},
 {'False': ['BOOL', 'storage', '='], 'type': 'bool_now', 'name': 'boo[i+1];'},
 {'False': ['proto_bef.name'], 'name': '=proto_now.name;'},
 {'False': ['proto_bef.protoCreationDate', '='], 'name': 'proto_now.protoCreationDate;'},
 {'False': ['proto_bef.protoElapsed', '='], 'name': 'proto_now.protoElapsed;'},
 {'False': ['proto_bef.protoCollapseDate', '='], 'name': 'proto_now.protoCollapseDate;'},
 {'False': ['proto_bef.protoNextDue', '='], 'name': 'proto_now.protoNextDue;'},
 {'False': ['proto_bef.protoDueElapsed', '='], 'name': 'proto_now.protoDueElapsed;'},
 {'False': ['proto_bef.protoFutureFees', '='], 'name': 'proto_now.protoFutureFees;'},
 {'False': ['proto_bef.protoIncreasedDecay', '='], 'name': 'proto_now.protoIncreasedDecay;'},
 {'False': ['proto_bef.protoFeeFroze', '='], 'name': 'proto_now.protoFeeFroze;'},
 {'False': ['proto_bef.protoTotalPayable', '='], 'name': 'proto_now.protoTotalPayable;'},
 {'type': 'bool_now.owed;', 'False': ['=']},
 {'type': 'bool_now.boolInsolvent;', 'False': ['=']},
 {'type': 'bool_now.boolImploded;', 'False': ['=']},
 {'type': 'bool_now.boolCollapsed;', 'False': ['=']},
 {'name': 'protos.pop();'},
 {'name': 'boo.pop();'},
 {'False': ['totalfees[address(this)].totalPayable', '-='], 'name': 'totalfees[_account].totalPayable;'},
 {'False': ['totalfees[_account].totalPayable', '='], 'name': 'Zero;'},
 {'False': ['totalfees[_account].totalPayable', '+='], 'name': 'protoowners[_account][i].protoTotalPayable;'},
 {'name': 'INTqueryProtoTotalPayable(_account,i);'},
 {'False': ['totalfees[address(this)].totalPayable', '+='], 'name': 'totalfees[_account].totalPayable;'},
 {'False': ['totalfees[address(this)].futureFees', '-='], 'name': 'totalfees[_account].futureFees;'},
 {'False': ['totalfees[_account].futureFees', '='], 'name': 'Zero;'},
 {'False': ['totalfees[_account].futureFees', '+='], 'name': 'protoowners[_account][i].protoFutureFees;'},
 {'name': 'INTqueryProtoFutureFees(_account,i);'},
 {'False': ['totalfees[address(this)].futureFees', '+='], 'name': 'totalfees[_account].futureFees;'},
 {'name': 'if(_bool==true){'},
 {'False': ['protoowners[_account][_x].protoFeesPaid'], 'name': '+=_feesPaid;'},
 {'False': ['protoowners[_account][_x].protoNextDue', '+='], 'name': 'feePeriod.mul(_feesPaid);'},
 {'False': ['totalfees[_account].feesPaid', '+='], 'name': '_feesPaid;'},
 {'False': ['totalfees[address(this)].feesPaid', '+='], 'name': '_feesPaid;'},
 {'name': '}else{'},
 {'False': ['protoowners[_account][_x].protoFeesPaid'], 'name': '-=_feesPaid;'},
 {'False': ['protoowners[_account][_x].protoNextDue', '-='], 'name': 'feePeriod.mul(_feesPaid);'},
 {'False': ['totalfees[_account].feesPaid', '-='], 'name': '_feesPaid;'},
 {'False': ['totalfees[address(this)].feesPaid', '-='], 'name': '_feesPaid;'},
 {'False': ['if(_bool', '=='], 'name': 'false){'},
 {'False': ['protoowners[_account][_x].protoNextDue', '-='], 'name': '_protoNextDue;'},
 {'name': '}else{'},
 {'False': ['protoowners[_account][_x].protoNextDue', '+='], 'name': '_protoNextDue;'},
 {'name': 'INTqueryBoolInsolvent(_account,_x);'},
 {'name': 'INTqueryBoolOwed(_account);'},
 {'name': 'INTqueryProtoFutureFees(_account,_x);'},
 {'name': 'INTqueryProtoTotalPayable(_account,_x);'},
 {'False': ['protoowners[_account][_x].protoFutureFees', '='], 'name': 'NeFiLib.getMultiple(feePeriod,INTgetProtoDueElapsed(_account,_x));'},
 {'False': ['protoowners[_account][_x].protoTotalPayable', '='], 'name': 'NeFiLib.getMultiple(feePeriod,NeFiLib.getLower(INTgetProtoCollapseDate(_account,_x).sub(block.timestamp),maxFeePayment)).sub(protoowners[_account][_x].protoFutureFees);'},
 {'False': ['if(_x', '=='], 'name': '101){'},
 {'name': 'INTupdateFeesPaid(_account,true,findLowest(_account),1);'},
 {'name': '}else{'},
 {},
 {'name': 'INTupdateFeesPaid(_account,true,_x,1);'},
 {'name': 'INTreconcileAccountFees(_account);'},
 {'False': ['if(boostem', '=='], 'name': 'true){'},
 {'False': ['protoowners[_account][_x].protoIncreasedDecay', '='], 'name': 'boostMGR.getIncreasedDecay(_account,_x);'},
 {'name': '}else{'},
 {'False': ['protoowners[_account][_x].protoIncreasedDecay', '='], 'name': 'Zero;'},
 {'False': ['if(feeFroze', '==', 'false', '&&', 'INTgetFeeFroze()', '!='], 'name': 'Zero){'},
 {'False': ['protoowners[_account][_x].protoFeeFroze'], 'name': '=_time.sub(NeFiLib.getHigher(INTgetFeeFroze(),INTgetProtoCreationDate(_account,_x)));'},
 {'name': 'INTupdateProtoNextDue(_account,_x,protoowners[_account][_x].protoFeeFroze,true);'},
 {'False': ['totalfees[_account].feeFroze', '+='], 'name': '_time.sub(INTgetFeeFroze());'},
 {'False': ['protoowners[_account][_x].protoFeeFroze', '='], 'name': 'Zero;'},
 {'False': ['}else', 'if(feeFroze', '=='], 'name': 'true){'},
 {'False': ['protoowners[_account][_x].protoFeeFroze'], 'name': '=_time.sub(NeFiLib.getHigher(INTgetFeeFroze(),INTgetProtoCreationDate(_account,_x)));'},
 {'False': ['if(feeFroze', '=='], 'name': 'false){'},
 {'False': ['totalfees[address(this)].feeFroze', '='], 'name': 'Zero;'},
 {'name': '}else{'},
 {'False': ['totalfees[address(this)].feeFroze', '='], 'name': '_time;'},
 {'False': ['protoowners[_account][_x].protoElapsed', '='], 'name': '(block.timestamp.sub(INTgetProtoCreationDate(_account,_x))).add(INTgetProtoIncreasedDecay(_account,_x));'},
 {'type': 'uint256', 'False': ['next', '='], 'name': 'INTgetProtoFeeFroze(_account,_x).add(INTgetProtoNextDue(_account,_x));'},
 {'name': 'if(NeFiLib.isLower(next,block.timestamp)==true){'},
 {'False': ['protoowners[_account][_x].protoDueElapsed', '=='], 'name': '0;'},
 {'name': 'if(block.timestamp.sub(next)>=gracePeriod){'},
 {'name': 'INTupdateBoolImploded(_account,_x);'},
 {'False': ['protoowners[_account][_x].protoDueElapsed', '='], 'name': 'next.sub(block.timestamp);'},
 {'False': ['protoowners[_account][_x].protoCollapseDate', '='], 'name': 'INTgetProtoCreationDate(_account,_x).add(protoLife.add(INTgetProtoIncreasedDecay(_account,_x)));'},
 {'False': ['if(protoowners[_account][_x].protoCollapseDate', '<='], 'precedence': 'block.timestamp){'},
 {'name': 'INTupdateBoolCollapsed(_account,_x);'},
 {'False': ['if(bools[_account][_x].boolImploded', '!='], 'name': 'true){'},
 {'type': 'bools[_account][_x].boolImploded', 'False': ['='], 'name': 'true;'},
 {'False': ['totalfees[_account].insolvent', '+='], 'name': '1;'},
 {'False': ['totalfees[address(this)].insolvent', '+='], 'name': '1;'},
 {'name': 'INTupdateProtos(_account,false,1);'},
 {'name': 'protoMGR.collapseProto(_account,_x);'},
 {'False': ['if(bools[_account][_x].boolCollapsed', '!='], 'name': 'true){'},
 {'type': 'bools[_account][_x].boolCollapsed', 'False': ['='], 'name': 'true;'},
 {'False': ['totalfees[_account].collapsed', '+='], 'name': '1;'},
 {'False': ['totalfees[address(this)].collapsed', '+='], 'name': '1;'},
 {'name': 'INTupdateProtos(_account,false,1);'},
 {'name': 'protoMGR.collapseProto(_account,_x);'},
 {'False': ['totalfees[address(this)].feesOwed', '-='], 'name': 'totalfees[_account].feesOwed;'},
 {'False': ['totalfees[_account].feesOwed', '='], 'name': 'Zero;'},
 {'name': 'if(INTgetProtoDueElapsed(_account,i)<feePeriod){'},
 {'type': 'bools[_account][i].owed', 'False': ['='], 'name': 'true;'},
 {'False': ['totalfees[_account].feesOwed', '+='], 'name': '1;'},
 {'name': 'INTqueryBoolInsolvent(_account,i);'},
 {'name': '}else{'},
 {'type': 'bools[_account][i].owed', 'False': ['='], 'name': 'false;'},
 {'False': ['totalfees[address(this)].feesOwed', '+='], 'name': 'totalfees[_account].feesOwed;'},
 {'name': 'if(INTgetProtoDueElapsed(_account,_x)>0){'},
 {'type': 'bools[_account][_x].boolInsolvent', 'False': ['='], 'name': 'false;'},
 {'False': ['}else'], 'name': 'if(INTgetProtoDueElapsed(_account,_x)==0){'},
 {'type': 'bools[_account][_x].boolInsolvent', 'False': ['='], 'name': 'true;'},
 {'False': ['return'], 'type': 'bools[_account][_x].boolImploded;'},
 {'False': ['return'], 'name': 'totalfees[_account].insolvent;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].name;'},
 {'False': ['return'], 'name': 'totalfees[_account].totalPayable;'},
 {'False': ['return'], 'name': 'totalfees[address(this)].feeFroze;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoDueElapsed;'},
 {'False': ['return'], 'name': 'totalfees[_account].feesOwed;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoElapsed;'},
 {'False': ['return'], 'type': 'bools[_account][_x].owed;'},
 {'False': ['return'], 'type': 'bools[_account][_x].boolInsolvent;'},
 {'False': ['return'], 'name': 'totalfees[_account].protos;'},
 {'False': ['return'], 'name': 'totalfees[_account].futureFees;'},
 {'False': ['return'], 'name': 'totalfees[_account].feesPaid;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoCreationDate;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoNextDue;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoFutureFees;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoIncreasedDecay;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoCollapseDate;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoFeeFroze;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoTotalPayable;'},
 {'False': ['return'], 'type': 'bools[_account][_x].boolCollapsed;'},
 {'False': ['return'], 'name': 'totalfees[_account].imploded;'},
 {'False': ['return'], 'name': 'totalfees[_account].collapsed;'},
 {'type': 'bools[_account][_x].owed', 'False': ['='], 'name': '_owed;'},
 {'False': ['totalfees[_account].totalPayable', '='], 'name': '_totalPayable;'},
 {'False': ['totalfees[_account].protos', '='], 'name': '_protos;'},
 {'False': ['totalfees[_account].feesOwed', '='], 'name': '_feesOwed;'},
 {'False': ['totalfees[_account].futureFees', '='], 'name': '_futureFees;'},
 {'False': ['totalfees[_account].collapsed', '='], 'name': '_collapsed;'},
 {'False': ['totalfees[_account].feeFroze', '='], 'name': '_feeFroze;'},
 {'False': ['totalfees[_account].insolvent', '='], 'name': '_insolvent;'},
 {'False': ['totalfees[_account].imploded', '='], 'name': '_imploded;'},
 {'False': ['protoowners[_account][_x].name', '='], 'name': '_name;'},
 {'False': ['protoowners[_account][_x].protoCreationDate', '='], 'name': '_protoCreationDate;'},
 {'False': ['protoowners[_account][_x].protoCollapseDate', '='], 'name': '_protoCollapseDate;'},
 {'False': ['protoowners[_account][_x].protoNextDue', '='], 'name': '_protoNextDue;'},
 {'type': 'bools[_account][_x].boolCollapsed', 'False': ['='], 'name': '_bool;'},
 {'False': ['protoowners[_account][_x].protoFutureFees', '='], 'name': '_protoFutureFees;'},
 {'False': ['protoowners[_account][_x].protoIncreasedDecay', '='], 'name': '_protoIncreasedDecay;'},
 {'False': ['protoowners[_account][_x].protoFeeFroze', '='], 'name': '_protoFeeFroze;'},
 {'type': 'bools[_account][_x].boolImploded', 'False': ['='], 'name': '_boolImploded;'},
 {'False': ['protoowners[_account][_x].protoTotalPayable', '='], 'name': '_protoTotalPayable;'},
 {'False': ['PROTOOWNERS[]', 'storage', 'protos', '='], 'name': 'protoowners[_account];'},
 {'False': ['return'], 'name': 'protos.length;'},
 {'False': ['return'], 'name': 'totalfees[_account].totalPayable;'},
 {'False': ['return'], 'name': 'totalfees[_account].protos;'},
 {'False': ['return'], 'name': 'totalfees[_account].feesOwed;'},
 {'False': ['return'], 'name': 'totalfees[_account].futureFees;'},
 {'False': ['return'], 'name': 'totalfees[_account].feesPaid;'},
 {'False': ['return'], 'name': 'totalfees[_account].insolvent;'},
 {'False': ['return'], 'name': 'totalfees[_account].feeFroze;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].name;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoCreationDate;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoCollapseDate;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoNextDue;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoIncreasedDecay;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoFutureFees;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoFeeFroze;'},
 {'False': ['return'], 'name': 'protoowners[_account][_x].protoTotalPayable;'},
 {'False': ['return'], 'type': 'bools[_account][_x].boolInsolvent;'},
 {'False': ['return'], 'type': 'bools[_account][_x].boolImploded;'},
 {'False': ['return'], 'type': 'bools[_account][_x].boolCollapsed;'},
 {'False': ['TOTALFEES', 'storage', '_totalfees', '='], 'name': 'totalfees[_account];'},
 {'False': ['return'], 'name': '(_totalfees.totalPayable,_totalfees.protos,_totalfees.feesOwed,_totalfees.futureFees,_totalfees.feesPaid,_totalfees.collapsed,_totalfees.feeFroze,_totalfees.insolvent,_totalfees.imploded);'},
 {'False': ['PROTOOWNERS[]', 'storage', '_protoowners', '='], 'name': 'protoowners[_account];'},
 {'False': ['PROTOOWNERS', 'storage', '_protoowners_', '='], 'name': '_protoowners[_x];'},
 {'False': ['return'], 'name': '(_protoowners_.name,_protoowners_.protoCreationDate,_protoowners_.protoElapsed,_protoowners_.protoCollapseDate,_protoowners_.protoNextDue,_protoowners_.protoDueElapsed,_protoowners_.protoFutureFees,_protoowners_.protoIncreasedDecay,_protoowners_.protoFeeFroze,_protoowners_.protoTotalPayable);'},
 {'False': ['return'], 'name': 'protoOwners.length;'},
 {'False': ['return'], 'name': 'protoOwners[_x];'},
 {'False': ['BOOL[]', 'storage', '_bool', '='], 'type': 'bools[_account];'},
 {'False': ['BOOL', 'storage', '_bool_', '='], 'name': '_bool[_x];'},
 {'False': ['return'], 'name': '(_bool_.owed,_bool_.boolInsolvent,_bool_.boolImploded,_bool_.boolCollapsed);'},
 {'False': ['return'], 'name': 'INTgetProtoownersLength(_account);'},
 {'False': ['PROTOOWNERS[]', 'storage', '_protoowners', '='], 'name': 'protoowners[_account];'},
 {'False': ['return'], 'name': '_protoowners.length;'},
 {'False': ['feeFroze', '='], 'name': '_x;'},
 {'type': 'uint256', 'False': ['_time', '='], 'precedence': 'block.timestamp;'},
 {'type': 'address', 'False': ['_account', '='], 'name': 'protoOwners[j];'},
 {'name': 'INTupdateProtoFeeFroze(_account,i,_time);'},
 {'name': 'INTupdateFeeFroze(_time);'},
 {'name': 'Managers.pop();'},
 {'False': ['if(NeFiLib.addressInList(Managers,newVal)'], 'name': '==false){'},
 {'False': ['Managers.push(newVal);', '//token', 'swap'], 'type': 'address'},
 {'False': ['maxPayPeriods', '='], 'name': '_periods;'},
 {'False': ['maxFeePayment', '='], 'name': 'maxPayPeriods.mul(feePeriod);'},
 {'type': 'uint256', 'False': ['maxPeriods', '='], 'name': 'NeFiLib.getMultiple(feePeriod,maxFeePayment);'},
 {'False': ['feePeriod', '=', '_days.mul(1'], 'name': 'days);'},
 {'False': ['maxFeePayment', '='], 'name': 'maxPeriods.mul(feePeriod);'},
 {'False': ['NeFiToken', '='], 'name': '_account;'},
 {'interface': 'NeFi', 'False': ['='], 'name': 'IERC20(NeFiToken);'},
 {'False': ['treasury', '='], 'name': '_account;'},
 {'False': ['Guard', '='], 'name': '_account;'},
 {'False': ['boostem', '='], 'name': '_bool;'},
 {'False': ['protoMGR', '='], 'name': 'protoManager(_account);'},
 {'abstract contract': 'over', 'False': ['='], 'name': 'overseer(_account);'},
 {'abstract contract': 'boostMGR', 'False': ['='], 'name': 'boostManager(_account);'},
 {'False': ['teamPool', '='], 'name': '_account;'},
 {'False': ['rewardsPool', '='], 'name': '_account;'},
 {'False': ['rewardsPerc'], 'name': '=_perc[0];'},
 {'False': ['teamPerc'], 'name': '=_perc[1];'},
 {'False': ['treasuryPerc'], 'name': '=_perc[2];'},
 {'name': '_to.transfer(_amount);'},
 {'name': '_to.transfer(address(this).balance);'},
 {'interface': 'IERC20', 'False': ['newtok', '='], 'name': 'IERC20(_token);'},
 {'False': ['feeTok.transferFrom(address(this),', '_to,'], 'name': 'feeTok.balanceOf(address(this)));'},
 {}]